{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByABC","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","this","newGoods","goods","sort","good1","good2","localeCompare","length","console","log","getReorderedGoods","isInitial","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAgDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,UAAY,WACV,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,EAwBES,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EArEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNW,EAAQ,YAAOC,GAsBrB,MAnBiB,aAAbX,GACFU,EAASE,MAAK,SAACC,EAAOC,GAAR,OACZD,EAAME,cAAcD,MAIP,WAAbd,GACFU,EAASE,MAAK,SAACC,EAAOC,GAAR,OACZD,EAAMG,OAASF,EAAME,UAIrBjB,GACFW,EAASH,UAIXU,QAAQC,IAAIlB,EAAUD,GAEfW,EA0CYS,CAAkBvB,EACjC,CAAEI,WAAUD,eACRqB,EAAYrB,GAAcC,IAAaL,EAASM,KAEtD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYvB,IAAaL,EAASS,WAEtCoB,QAASf,KAAKP,UAPhB,iCAYA,wBACEoB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYvB,IAAaL,EAASW,SAEtCkB,QAASf,KAAKJ,aAPhB,4BAYA,wBACEiB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaxB,IAEjByB,QAASf,KAAKF,QAPhB,qBAYCa,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,MAHhB,sBAUJ,6BACGE,EAASe,KAAI,SAAAC,GAAI,OAChB,oBACE,UAAQ,OADV,SAIGA,GAFIA,eA3FnB,GAAyBC,aC/DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2ed41e6d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'None',\n  ALPHABET = 'Alphabet',\n  LENGTH = 'Length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const newGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  if (sortType === 'Alphabet') {\n    newGoods.sort((good1, good2) => (\n      good1.localeCompare(good2)\n    ));\n  }\n\n  if (sortType === 'Length') {\n    newGoods.sort((good1, good2) => (\n      good1.length - good2.length\n    ));\n  }\n\n  if (isReversed) {\n    newGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return newGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByABC = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const newGoods = getReorderedGoods(goodsFromServer,\n      { sortType, isReversed });\n    const isInitial = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortByABC}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {isInitial && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {newGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}